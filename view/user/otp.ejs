<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom CSS */
        body {
            background-color: #f8f9fa;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
        }
        .otp-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
        }
        .otp-header {
            text-align: center;
            margin-bottom: 20px;
        }
        .otp-input-group {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
        }
        .otp-input {
            width: 45px;
            height: 45px;
            font-size: 18px;
            text-align: center;
            border: 1px solid #ced4da;
            border-radius: 4px;
        }
        .otp-input:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        .error-message {
            color: red;
            text-align: center;
            margin-bottom: 15px;
        }
        .btn-primary {
            width: 100%;
        }
        .resend-link {
            text-align: center;
            margin-top: 15px;
        }
        #timer {
            display: block;
            text-align: center;
            margin-top: 10px;
            font-size: 14px;
            color: #6c757d;
        }
        .disabled {
            pointer-events: none;
            opacity: 0.5;
        }
    </style>
</head>
<body>
    <div class="otp-container">
        <h2 class="otp-header">OTP Verification</h2>
        <p class="error-message"><%= errorOtp %></p>
        <form action="/otp" method="post">
            <input type="hidden" value="<%= email %>" name="email">
            <div class="otp-input-group">
                <input class="form-control otp-input" style="width: 240px;" type="text" id="otp16" name="otp1" maxlength="6" required>
            </div>
            <button type="submit" class="btn btn-primary" id="verifyBtn">Verify</button>
        </form>
        <span id="timer"></span>
        <div class="resend-link">
            <button onclick="window.location.href='/resend?email=<%= email %>'" id="resendLink" class="btn btn-link disabled" disabled>Resend OTP</button>
        </div>
    </div>
    <script>
        var timerElement = document.getElementById('timer');
        var resendLink = document.getElementById('resendLink');
        var countdownInterval;
        var resendDisabled = true;
        var initialCountdown = 60; // Initial countdown in seconds
    
        // Function to start or continue the timer
        function startTimer() {
            var countdown = getCookie('countdown') || initialCountdown;
            if (countdown <= 0) {
                enableResendLink();
                return;
            }
    
            countdownInterval = setInterval(function () {
                if (countdown > 0) {
                    setCookie('countdown', countdown, 1); // Store remaining countdown in a cookie
                    timerElement.textContent = countdownFormat(countdown);
                    countdown--;
                } else {
                    clearInterval(countdownInterval);
                    timerElement.textContent = '';
                    setCookie('countdown', 0, 1); // Reset the cookie
                    enableResendLink();
                }
            }, 1000);
        }
    
        // Format countdown into minutes and seconds
        function countdownFormat(seconds) {
            var min = Math.floor(seconds / 60);
            var sec = seconds % 60;
            return min + ':' + (sec < 10 ? '0' : '') + sec;
        }
    
        // Enable the resend link when the timer ends
        function enableResendLink() {
            resendDisabled = false;
            resendLink.classList.remove('disabled');
            resendLink.disabled = false;
        }
    
        // Set cookie with expiration days
        function setCookie(name, value, days) {
            var expires = '';
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = '; expires=' + date.toUTCString();
            }
            document.cookie = name + '=' + (value || '') + expires + '; path=/';
        }
    
        // Get cookie value by name
        function getCookie(name) {
            var nameEQ = name + '=';
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }
    
        // Clear cookie by setting expiration in the past
        function clearCookie(name) {
            document.cookie = name + '=; Expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/';
        }
    
        // Start the timer on page load
        startTimer();
    
        // Example of setting OTP in cookie
        var otp = '1234'; // Replace with actual OTP value
        setCookie('otp', otp, 1); // Store OTP in cookie for 1 day
    </script>
    
</body>
</html>